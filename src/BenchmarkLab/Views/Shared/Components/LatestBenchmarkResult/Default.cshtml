@using Humanizer
@using MeasureThat.Net.Logic.Web
@model MeasureThat.Net.Models.BenchmarkResultDto


<div class="panel panel-default">
    <div class="panel-heading"><b>Run details:</b> (Test run date:
            <span>@Model.WhenCreated.Humanize()</span>)</div>
    <div class="panel-body">
        <div class="form-group">
            @Html.Label("User agent:")
            <span>@Model.RawUserAgenString</span>
        </div>

        <div class="form-group">
            @Html.Label("Browser/OS:")
            @Model.Browser on @Model.OS
        </div>
        @await Html.PartialAsync("SharedResultButtons", Model)
    </div>
</div>

<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>Test name</th>
            <th>Executions per second</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var row in Model.ResultRows)
        {
            <tr>
                <th scope="row">@row.TestName</th>
                <td>@row.ExecutionsPerSecond.ToString("F1") Ops/sec</td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
window.addEventListener('load', function(){
    var chartData = [];
    var chartItem = [];
    var header = ['Test case', 'Executions Per Second'];
    chartData.push(header);
    @foreach (var row in Model.ResultRows)
    {
        <text>
        chartItem = [];
        chartItem.push(JSON.parse('@Html.Raw(Json.Serialize(row.TestName))'));
        chartItem.push(@row.ExecutionsPerSecond.ToString("F3"));
        chartData.push(chartItem);
        </text>
    }
    google.charts.load('current', { packages: ['corechart', 'bar'] });
    google.charts.setOnLoadCallback(() => ShowResultsPageController.drawChart(chartData));
});
</script>