@model MeasureThat.Net.Models.BenchmarkDto
@using Humanizer

@{
    var random = new Random();
    var randomSummary = Model.LLMSummaries.Count > 0 ? Model.LLMSummaries[random.Next(Model.LLMSummaries.Count)] : null;
}

@if (randomSummary == null)
{
    return;
}

<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseLLMSummary" aria-expanded="true" aria-controls="collapseLLMSummary">
                    <b>Autogenerated LLM Summary</b> (model <b>@randomSummary.Model</b>, generated @randomSummary.CreatedDate.Humanize()):
                </a>
            </h4>
        </div>
        <div id="collapseLLMSummary" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body collapsed">
                <div id="markdown-output"></div>
            </div>
        </div>
        <div class="panel-footer">LLMs can make mistakes. Check important info.</div>
    </div>
</div>

<textarea id="markdown-input" style="display:none;">@randomSummary.Description</textarea>

<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js" defer onload="initializeMarkdown()"></script>
<script>
    function initializeMarkdown() {
        document.getElementById('markdown-input').addEventListener('input', function () {
            var markdownText = this.value;
            var htmlContent = marked(markdownText);
            document.getElementById('markdown-output').innerHTML = htmlContent;
        });

        // Initial render
        var initialMarkdown = document.getElementById('markdown-input').value;
        document.getElementById('markdown-output').innerHTML = marked.parse(initialMarkdown);
    }
</script>

