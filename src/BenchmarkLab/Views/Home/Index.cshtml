@using System.Threading.Tasks
@using MeasureThat.Net.Models
@using Microsoft.AspNetCore.Identity
@using MeasureThat.Net.Logic.Web
@inject StaticSiteConfigProvider staticConfig
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Home Page";
}

<div class="jumbotron">
    <div class="row">
        <div class="col-md-4">
            <img src="/images/Picture1.png"/>
        </div>
        <div class="col-md-8">
            <h1>MeasureThat.net&nbsp;<i class="fa fa-bar-chart" aria-hidden="true"></i></h1>
            <p class="lead">Find out how to improve the speed of your web application!</p>
            <p>Create a benchmark, measure performance of the JavaScript code and pick the fastest version.</p>
            <p>Click <strong>New benchmark</strong> to get started. Or checkout existing benchmarks that were added by the Community.</p>
            <p>
                @{ await Html.RenderPartialAsync("_SharedCreateBenchmark"); }

                <a asp-controller="Benchmarks" asp-action="Index" class="btn btn-default btn-lg">Latest</a>
                <a asp-controller="Benchmarks" asp-action="My" class="btn btn-default btn-lg">My benchmarks</a>
                <a asp-controller="Tools" asp-action="Index" class="btn btn-default btn-lg">Tools</a>
            </p>
            <br>
            <p>
                @await Html.PartialAsync("_SharedDonation")
            </p>
            <p><a target="_blank" href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&no_note=0&lc=US&currency_code=USD&bn=PP-DonationsBF:btn_donate_LG.gif:NonHostedGuest&business=MeasureThat@outlook.com&item_name=MeasureThat&item_number=Support%20service&amount=0"><img src="https://www.paypalobjects.com/en_GB/i/btn/btn_donate_LG.gif" border="0" alt="PayPal &#8212; The safer, easier way to pay online." /></a></p>
        </div>
    </div>
    
</div>
<div class="row">
    <div class="col-md-6">
        <h2>Version history:</h2>
        <h3>1.7.x:</h3>
        <ul>
            <li>
                MeasureThat.net can now benchmark Python code using <a asp-controller="Home" asp-action="Pyodide" target="_blank">Pyodide</a>. <a asp-controller="Benchmarks" asp-action="Show" asp-route-id="32635" target="_blank">See example</a>.
            </li>
            <li>
                Added <a asp-controller="Home" asp-action="Faq" target="_blank">FAQ</a>
            </li>
            <li>
                Async/Await is now supported in script preparation code (wrapped as <i>globalMeasureThatScriptPrepareFunction</i> function). See <a asp-controller="Home" asp-action="Faq" target="_blank">FAQ</a> or <a asp-controller="Benchmarks" asp-action="Show" asp-route-id="32635" target="_blank">example</a>.
            </li>
        </ul>
        <h3>1.6.x:</h3>
        <ul>
            <li>
                MeasureThat.net now supports Async/Deferred tests
            </li>
            <li>
                Bug fixes (duplicated titles validation, lost test case names, etc)
            </li>
            <li>
                UI Cleanup (login flow, creation, etc)
            </li>
            <li>
                Removed reCaptcha from editing flow
            </li>
        </ul>
        <h3>1.5.x:</h3>
        <ul>
            <li>
                Upgraded to .NET8 from ancient .NET Core 2.
            </li>
            <li>
                Upgraded NPM dependencies, TypeScript, etc.
            </li>
            <li>
                Bug fixes
            </li>
        </ul>
    </div>
    <br/>
    <div class="col-md-6">
        <h2>Sample benchmarks:</h2>
        <ul>
            <li>
                <a href="https://measurethat.net/Benchmarks/Show/32502/2/async-test"><b>New:</b> Async Tests</a>
            </li>
            <li>
                <a href="https://measurethat.net/Benchmarks/Show/32503/12/deferred-regular-async-hybrid-test"><b>New:</b> Deferred Tests</a>
            </li>
            <li>
                <a href="https://www.measurethat.net/Benchmarks/Show/373/0/empty-an-array-in-javascript">Clear the array</a>
            </li>
            <li>
                <a href="https://www.measurethat.net/Benchmarks/Show/1/demo-benchmark">Demo benchmark (example from benchmarkjs.com)</a>
            </li>
            <li>
                <a href="https://www.measurethat.net/Benchmarks/Show/2/caching-length-property-vs-getting-it-each-ti">Caching length property vs getting it each time in the loop</a>
            </li>
            <li>
                <a href="https://www.measurethat.net/Benchmarks/Show/3/jquery-by-id-vs-documentgetelementbyid">jQuery by id vs Document.getElementById</a>
            </li>
            <li>
                <a href="https://www.measurethat.net/Benchmarks/Show/4/ecmascript6-int16array-vs-regular-js-array">EcmaScript6 Int16Array vs regular JS array</a>
            </li>
            <li>
                <a href="https://www.measurethat.net/Benchmarks/Show/19/0/which-equals-operator-vs-is-faster">Which equals operator (== vs ===) is faster?</a>
            </li>
        </ul>
    </div>
</div>

<div class="row">
    @{
        if (staticConfig.GetNewsletterSignupConfig().Enabled)
        {
            <div class="col-md-6">
                <h2>Stay in touch:</h2>
                @await Html.PartialAsync("_SharedNewsletterSignup")
            </div>
        }
    }
    <div class="col-md-6">
        @await Html.PartialAsync("_SharedAds")
    </div>
    
    <div class="col-md-6">
        <h2>Check out our free online tools:</h2>
        @await Html.PartialAsync("_OnlineToolsList")
    </div>
</div>